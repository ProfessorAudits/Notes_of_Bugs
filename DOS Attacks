# DOS Bugs Report 


### Description : 
 Causing a function or contract not being able to Call. OR Preventing the transaction to run( Like : It can caused also by an external call failing).
<hr>

### Uncover these bugs using this tip:

Ask Yourself these questions:

<b> METHOD 1 :  For Unbounded Loops

- 1.  In this for loop (this iteratable thing) is bounded to a certain size or not ?
- 2. If NOT , can a user can add arbitrary amount of items to that list ?
- 3. If YES , then how much it will cost the user to do that ?
- 4. If a user can add a like a 1000 items on that list by using a very cheap amount of money THEN you have a critical or 
     High bug Found.

<b> METHOD 2:  For External Calls

- 1. Lookout for any external calls( It maybe sending some money or just making an external call to other contract or user)
- 2. Is there a way for these calls to fail (revert). Is there any revert there.
- 3. If YES , Then how can this affect the system ? (like : preventing liquidations or ...)

HOW A Call Can Fail : 

1. Sending ether to the contract that doesn't accept it.
2. Calling a function that doesn't exist. 
3. The external call execution runs out of gas.
  
## Reports :

### HIGH :

-  Unbounded Loops (leads to DOS) : https://solodit.xyz/issues/h-04-unbounded-loop-in-_removenft-could-lead-to-a-griefingdos-attack-code4rena-visor-visor-contest-git

- Mappings can also be un-bounded : https://solodit.xyz/issues/m-07-processfees-may-fail-due-to-exceed-gas-limit-code4rena-juicebox-juicebox-v2-contest-git
- External Calls inside a loop  : 

### MEDIUM :
 
- Anything other things can also cause DOS  : https://solodit.xyz/issues/m-01-incorrect-unlocktime-can-dos-withdrawgovernanceasset-code4rena-behodler-behodler-contest-git

-
